---
- name: Create zend user
  user:
    name: zend
    state: present
    shell: /usr/sbin/nologin

- name: Set zend folder owner
  file:
    path: /home/zend
    owner: zend
    group: zend
    recurse: yes

- name: Clone acme.sh
  git:
    repo: https://github.com/Neilpang/acme.sh.git
    dest: /home/zend/acme.sh
    version: master
  register: acmesh

- name: Install acme.sh
  become_user: zend
  shell: /home/zend/acme.sh/acme.sh --install
  args:
    chdir: /home/zend/acme.sh  
  when: acmesh.changed

- name: Configure acme.sh account
  template:
    src: account.conf
    dest: "/home/zend/.acme.sh/account.conf"
    owner: zend
    group: zend
  register: acme_sh_account_configured

- name: Allow acme.sh sudo
  lineinfile:
    path: "/etc/sudoers"
    line: 'zend ALL=(ALL) NOPASSWD: /home/zend/.acme.sh/acme.sh,/bin/systemctl restart zend,/home/zend/.acme.sh/renew_hook.sh'

- name: Check for certificate
  stat:
    path: "/home/zend/.acme.sh/{{container_fqdn}}/{{container_fqdn}}.cer"
  register: certificate_exists

- name: Get SSL certificate
  become_user: zend
  ### staging CA [use for testing to avoid rate limits]
  #shell: "/home/zend/.acme.sh/acme.sh --issue --staging --dns dns_namecheap -d {{ container_fqdn }} --renew-hook 'sudo /home/zend/.acme.sh/renew_hook.sh'"
  # remove --staging for prod use
  ###
  ### 
  ### letsencrypt CA (best, use this one)
  environment:
    NAMECHEAP_API_KEY: "{{namecheap_apikey}}"
    NAMECHEAP_USERNAME: "{{namecheap_username}}"
    NAMECHEAP_SOURCEIP: "{{namecheap_sourceip}}"
    HTTPS_PROXY: "{{http_proxy}}"
  shell: "HTTPS_PROXY={{http_proxy}} /home/zend/.acme.sh/acme.sh --server letsencrypt --issue --dns dns_namecheap -d {{ container_fqdn }} --renew-hook 'sudo /home/zend/.acme.sh/renew_hook.sh'"
  ###
  ### zerossl CA (acme default, works but is flaky)
  #shell: "/home/zend/.acme.sh/acme.sh --issue --dns dns_namecheap -d {{ container_fqdn }} --renew-hook 'sudo /home/zend/.acme.sh/renew_hook.sh'"
  ###
  when: certificate_exists.stat.exists == False

- name: Parse intermediate cert from fullchain
  shell: cat /home/zend/.acme.sh/{{container_fqdn}}/fullchain.cer | awk 'split_after==1{n++;split_after=0} /-----END CERTIFICATE-----/ {split_after=1} {print > "/usr/local/share/ca-certificates/le-intermediate-cert" n ".crt"}'
  register: intermediate_cert_parsed

- name: Copy ca.crt
  copy:
    src: /home/zend/.acme.sh/{{container_fqdn}}/ca.cer
    dest: /usr/local/share/ca-certificates/acme_ca.cer
    remote_src: yes
  register: ca_cert

- name: Update ca-certificates
  shell: "update-ca-certificates --fresh"
  when: ca_cert.changed or intermediate_cert_parsed.rc == 0

- name: Remove default acme crontab that does not handle zend restart
  lineinfile:
    path: /var/spool/cron/crontabs/zend
    regexp: \* \"
    state: absent


- name: Create renew_hook.sh from template
  template:
    src: renew_hook.sh
    dest: "/home/zend/.acme.sh/renew_hook.sh"
    owner: root
    group: root
    mode: 0750
  
- name: Add cert renewal to crontab for zend user
  environment:
    HTTPS_PROXY: "{{http_proxy}}"
  lineinfile:
    path: /var/spool/cron/crontabs/zend
    line: '{{ 60 | random(seed=container_fqdn) }} 0 * * * HTTPS_PROXY={{http_proxy}} /home/zend/.acme.sh/acme.sh --cron --home /home/zend/.acme.sh --renew-hook "sudo /home/zend/.acme.sh/renew_hook.sh"'
    # note that the renew-hook seems to be persisted somewhere in acme (and the hook from the -issue command is used despite what we specify here)

